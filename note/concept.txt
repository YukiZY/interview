1.实时操作系统的特征：特定时间内完成特定的任务，实时性和可靠性

2.变量在内存中的分配：
　栈－由编译器分配释放，主要存放函数入参，局部变量等
　堆－由程序员分配释放，主要存放malloc/calloc/new的内存，如不手动释放，程序结束由OS回收
　静态区(全局区)-主要存放全局变量(普通和静态变量)和静态局部变量，，有区分初始化区和未初始化区，程序结束由OS释放
　文字常量区-主要存放常量值，程序结束有OS释放
　程序代码去-主要存放函数体的二进制代码
　
3.二叉树、平衡二叉树、完全二叉树、满二叉树
 二叉树：每个结点最多有两个子树的有序树
 平衡二叉树：当且仅当两个子树的高度差不超过1时的二叉树，左右子树都是平衡二叉树，AVL树
 完全二叉树：若设二叉树的高度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h 层从右向左连续缺若干结点，这就是完全二叉树。
 满二叉树：每一层上的结点数都是最大结点数
 
4.switch()的参数只能实型：只能是byte、char、short、int、long，不能是float、double、string等，因为他们不能用==比较

5.局部变量和全局变量可以重名，在局部变量作用域中局部变量会屏蔽全局变量，直接使用变量名就是局部变量，但是使用“::”就是全局变量

6.普通全局变量和静态全局变量:存储方式和位置都一样，都是在静态数据区，但是作用域范围不一样，普通全局变量是整个源程序，多个文件都可以访问，但是静态全局变量只能是在定义的文件中使用

7.普通函数和静态static函数：static函数在内存中只有一份拷贝，而普通函数在每次调用时都有一份拷贝，static函数只能在当前定义文件中使用，而普通函数可以被外部函数调用

8.const用法：
 const int a;     //常整形数
 int const a;     //常整形数
 const int* a;    //指向常整形数的指针(指针是可以改变的，但是指针指向的整形数是常整形数，不能修改)
 int* const ａ;   //指向整形数的常指针(指针是常量类型指针，指针的值不能修改，但是指针指向的整形数可以修改的)
 const int* const a; //指向常整形数的常指针(指针是常量类型指针，指针的值不能修改，指针指向的整形也是常量，也不能修改).
 
9. 函数指针和指针函数：
 最简单的辨别方式就是看函数名前面的指针*号有没有被括号（）包含，如果被包含就是函数指针，反之则是指针函数
 指针函数：首先他是一个函数，只不过函数的返回值是一个指针：类型说明符 * 函数名(参数)
 函数指针：指向函数的指针变量，本身是一个指针变量，指向函数的指针包含了函数的地址，通过指针可以调用函数：类型说明符 (*函数名)(参数)
 
