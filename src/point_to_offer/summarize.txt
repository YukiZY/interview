1.考虑代码的边界值和异常输入，确保代码的异常安全性

2.在多线程环境中，代码要考虑多线程安全性，利用锁等对临界资源和共享资源操作

3.字符串操作时，不光考虑从前向后，更多可以考虑从后向前操作，可以减少复制操作

4.链表，字符串，数组操作时多考虑性能，时间复杂度，空间复杂度

5.可以用递归的场景就可以考虑使用std的栈stack操作

6.掌握各种二叉树的规律

7.栈和队列是可以相互转换的，两个栈转换为一个队列，或者俩个队列转换为一个栈

8.二分查找法的思想就是数组始末两个指针，分别和中间位置的值比较，然后确认查找数据时在前半段还是后半段，然后进行始末指针的移动，再进行范围缩小，以此类推

9.斐波那契数:f(0)=0, f(1)=1, f(n)=f(n-1)+f(n-2)

10.在处理大数时，通常采用字符数组的方式，可以避免大数溢出

11.快速删除一个链表的节点的方法：将待删除结点的下一个节点的值和next指针赋值给待删除节点，然后删除待删除节点的下一个节点即可

12.对一个数除或者乘一个2的n次方的数，那么就可以对整个数进行右移或者左移n位，对2的n次方求余数是否等于0，可以用数 & 0x1 计算 

13.对于C语言而言，抽象的函数可以采用函数指针的方式实现。

14.对于不知道链表总个数的情况下，查找链表中的倒数第n个节点时，可以用两个指针，一个指向头结点，一个指向头结点+n-1，此时两个节点之间就相差n
  当前面的节点到达尾部时，后面的节点就指向了n；求中间节点时，两个指针指向头结点，一个一次走一步，一个一次走两步，走的快的到达尾节点时，
  慢的指针就刚好指向中间
  

